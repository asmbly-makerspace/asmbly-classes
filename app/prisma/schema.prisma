generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NeonEventCategory {
  // auto-incrementing primary key
  id Int @id @default(autoincrement())
  name String @unique @db.VarChar(50)
  archCategories AsmblyArchCategory? @relation(fields: [archCategoriesId], references: [id])
  archCategoriesId Int? @db.Integer
  events NeonEventType[]
  instances NeonEventInstance[]
}

model AsmblyArchCategory {
  id Int @id @default(autoincrement())
  name String @unique @db.VarChar(50)
  baseCategories NeonEventCategory[]
}

model NeonEventTeacher {
  id Int @id @default(autoincrement())
  name String @unique @db.VarChar(50)
  events NeonEventType[]
  instances NeonEventInstance[]
}

model NeonBaseRegLink {
  id Int @id @default(autoincrement())
  url String @unique @db.VarChar(255)
}

model NeonEventType {
  id Int @id @default(autoincrement())
  name String @db.VarChar(50)
  capacity Int @db.SmallInt
  price Float @db.Real
  summary String @db.Text
  request NeonEventTypeRequest[]
  teacher NeonEventTeacher[]
  category NeonEventCategory[]
  instances NeonEventInstance[]

  @@unique(name: "uniqueEvent", [capacity, name, price, summary])
}

model NeonEventInstance {
  eventId Int @id 
  eventType NeonEventType @relation(fields:[eventTypeId], references: [id])
  eventTypeId Int @db.Integer
  teacher NeonEventTeacher @relation(fields: [teacherId], references: [id])
  teacherId Int @db.Integer
  category NeonEventCategory @relation(fields: [categoryId], references: [id])
  categoryId Int @db.Integer
  attendeeCount Int @db.SmallInt
  startDateTime DateTime 
  endDateTime DateTime 
  requester NeonEventRequester[]
}

model NeonEventRequester {
  id Int @id @default(autoincrement())
  email String @unique
  firstName String @db.VarChar(30)
  lastName String @db.VarChar(30)
  classTypeRequests NeonEventTypeRequest[]
  classInstanceRequests NeonEventInstance[]
}

model NeonEventTypeRequest {
  id Int @id @default(autoincrement())
  requester NeonEventRequester @relation(fields:[requesterId], references: [id])
  requesterId Int @db.Integer
  classType NeonEventType @relation(fields:[classTypeId], references: [id])
  classTypeId Int @db.Integer
  requestType RequestType

  @@unique(name: "eventTypeRequest", [requestType, classTypeId, requesterId])
}

enum RequestType {
  ONDEMAND
  NOTIFICATION
}