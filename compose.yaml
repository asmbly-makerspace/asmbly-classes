networks:
  frontend:
  backend:

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - frontend
      - backend
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres-user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-password
      POSTGRES_DB: app
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
    depends_on:
      - postgres
      - redis
    secrets:
      - postgres-user
      - postgres-password
  postgres:
    image: postgres:16
    restart: unless-stopped
    networks:
      - backend
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres-user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-password
      POSTGRES_DB: app
    volumes:
      - postgres:/var/lib/postgresql/data
    secrets:
      - postgres-user
      - postgres-password
  redis:
    image: redis:7.2.3
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - redis:/data
  caddy:
    image: caddy:2.7.5
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy:/data
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

volumes:
  postgres:
  redis:
  caddy_data:
  caddy_config:

secrets:
  postgres-user: 
    file: ./secrets/postgres-user.txt
  postgres-password: 
    file: ./secrets/postgres-password.txt

